=begin
Problem statement
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence that do not exceed the nth term,
find the sum of the even-valued terms.
=end

require '../spec_helper'

def fibonacci_even_sum(num)
  sum = 2 # including 2 by default
  first = 1
  second = 2
  i = 3 # since first and second are already initialized, next on the list is the 3rd number
  while(i <= num)
    next_num = first + second
    first = second
    second = next_num
    i += 1
    sum += next_num if next_num % 2 == 0
  end
  sum
end

assert_equal(fibonacci_even_sum(10), 44)
assert_not_equal(fibonacci_even_sum(11), 189)
assert_equal(fibonacci_even_sum(18), 3382)
assert_equal(fibonacci_even_sum(23), 60696)
assert_equal(fibonacci_even_sum(43), 350704366)
